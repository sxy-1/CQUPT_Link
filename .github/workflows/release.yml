name: Windows Release on Merge to Main

on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置Python环境
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: 安装依赖
        run: pip install -r requirements.txt

      - name: 安装PyInstaller
        run: pip install pyinstaller

      - name: 打包为Windows可执行文件
        run: pyinstaller -w -i .\resource\images\favicon.ico CQUPT_Link.py

      - name: 提取版本号
        id: get_version
        run: |
          $content = Get-Content README.md -Raw
          if ($content -match 'img src="https://img.shields.io/badge/version-([0-9]+\.[0-9]+\.[0-9]+)') {
              $version = $matches[1]
              echo "版本号提取成功: $version"
              echo "version=$version" >> $env:GITHUB_ENV
          } else {
              echo "无法提取版本号，请检查README.md中的版本格式"
              exit 1
          }

      - name: 检查标签是否存在
        id: check_tag
        run: |
          $tagExists = git ls-remote --tags origin | Select-String -Pattern "refs/tags/v${{ env.version }}"
          if ($tagExists) {
            echo "tag_exists=true" >> $env:GITHUB_ENV
            echo "标签 v${{ env.version }} 已存在，将先删除旧版本"
          } else {
            echo "tag_exists=false" >> $env:GITHUB_ENV
            echo "标签 v${{ env.version }} 不存在，将创建新版本"
          }

      - name: 删除已存在的Release和标签
        if: env.tag_exists == 'true'
        run: |
          # 使用GitHub CLI删除已存在的Release和标签
          gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"
          gh release delete v${{ env.version }} --yes || echo "Release不存在或删除失败"
          git push --delete origin v${{ env.version }} || echo "远程标签不存在或删除失败"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 创建Release并上传产物
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: Release v${{ env.version }}
          files: dist/CQUPT_Link/CQUPT_Link.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}